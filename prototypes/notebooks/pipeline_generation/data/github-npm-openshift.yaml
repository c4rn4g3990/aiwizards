name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  NODEJS_HOME: /usr/local
  DOCKER_IMAGE: 'your-docker-image-name'
  OPENSHIFT_PROJECT_DEV: 'your-openshift-project-dev'
  OPENSHIFT_PROJECT_PROD: 'your-openshift-project-prod'
  OPENSHIFT_APP_NAME: 'your-app-name'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

      - name: Run Linters
        run: npm run lint

      - name: SonarQube Analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Dependency Scan and Update
        run: |
          npm audit
          npm update

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${{ github.run_number }} .
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ env.DOCKER_IMAGE }}:${{ github.run_number }}

      - name: Deploy to OpenShift Development Environment
        run: |
          oc login ${{ secrets.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TOKEN }}
          oc project ${{ env.OPENSHIFT_PROJECT_DEV }}
          oc new-app . --name=${{ env.OPENSHIFT_APP_NAME }}
          oc rollout latest ${{ env.OPENSHIFT_APP_NAME }}

      - name: Run Integration Tests
        run: npm run integration-test

      - name: Run Performance Tests
        # You may replace with your specific performance testing tool
        run: echo "Running performance tests..."

      - name: Promote to OpenShift Production Environment
        run: |
          oc login ${{ secrets.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TOKEN }}
          oc project ${{ env.OPENSHIFT_PROJECT_PROD }}
          oc tag ${{ env.OPENSHIFT_APP_NAME }}:latest ${{ env.OPENSHIFT_APP_NAME }}:prod
          oc rollout latest ${{ env.OPENSHIFT_APP_NAME }}

      - name: Clean Workspace
        if: always()
        uses: actions/github-script@v3
        with:
          script: |
            const fs = require('fs');
            fs.rmdirSync(process.env.GITHUB_WORKSPACE, { recursive: true });
